(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{352:function(t,r,e){"use strict";e.r(r);var o=e(43),n=Object(o.a)({},(function(){var t=this,r=t.$createElement,e=t._self._c||r;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("febeacon"),t._v(" "),e("h1",{attrs:{id:"总览"}},[t._v("总览")]),t._v(" "),e("p",[t._v("该库包含了一个共享类型的集合，我们可以关注这些类型的更改并同时操作。网络功能和双向绑定是在单独的模块中实现的。")]),t._v(" "),e("blockquote",[e("p",[t._v("该部分对应的文档在目录底部。")])]),t._v(" "),e("p",[e("a",{attrs:{href:"https://github.com/yjs/yjs",target:"_blank",rel:"noopener noreferrer"}},[t._v("英文原地址"),e("OutboundLink")],1)]),t._v(" "),e("h2",{attrs:{id:"信息呈现绑定-binding"}},[t._v("信息呈现绑定 (Binding)")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("名称")]),t._v(" "),e("th",{attrs:{align:"center"}},[t._v("光标")]),t._v(" "),e("th",[t._v("绑定(链接指向原地址)")]),t._v(" "),e("th",[t._v("Demo")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[e("a",{attrs:{href:"https://prosemirror.net/",rel:"nofollow"}},[t._v("ProseMirror")]),t._v("                                                  ")]),t._v(" "),e("td",{attrs:{align:"center"}},[t._v("YES")]),t._v(" "),e("td",[e("a",{attrs:{href:"http://github.com/yjs/y-prosemirror"}},[t._v("y-prosemirror")])]),t._v(" "),e("td",[e("a",{attrs:{href:"https://demos.yjs.dev/prosemirror/prosemirror.html",rel:"nofollow"}},[t._v("demo")])])]),t._v(" "),e("tr",[e("td",[e("a",{attrs:{href:"https://quilljs.com/",rel:"nofollow"}},[t._v("Quill")])]),t._v(" "),e("td",{attrs:{align:"center"}},[t._v("YES")]),t._v(" "),e("td",[e("a",{attrs:{href:"http://github.com/yjs/y-quill"}},[t._v("y-quill")])]),t._v(" "),e("td",[e("a",{attrs:{href:"https://demos.yjs.dev/quill/quill.html",rel:"nofollow"}},[t._v("demo")])])]),t._v(" "),e("tr",[e("td",[e("a",{attrs:{href:"https://codemirror.net/",rel:"nofollow"}},[t._v("CodeMirror")])]),t._v(" "),e("td",{attrs:{align:"center"}},[t._v("YES")]),t._v(" "),e("td",[e("a",{attrs:{href:"http://github.com/yjs/y-codemirror"}},[t._v("y-codemirror")])]),t._v(" "),e("td",[e("a",{attrs:{href:"https://demos.yjs.dev/codemirror/codemirror.html",rel:"nofollow"}},[t._v("demo")])])]),t._v(" "),e("tr",[e("td",[e("a",{attrs:{href:"https://microsoft.github.io/monaco-editor/",rel:"nofollow"}},[t._v("Monaco")])]),t._v(" "),e("td",{attrs:{align:"center"}},[t._v("YES")]),t._v(" "),e("td",[e("a",{attrs:{href:"http://github.com/yjs/y-monaco"}},[t._v("y-monaco")])]),t._v(" "),e("td",[e("a",{attrs:{href:"https://demos.yjs.dev/monaco/monaco.html",rel:"nofollow"}},[t._v("demo")])])])])]),t._v(" "),e("h2",{attrs:{id:"信息分发端-provider"}},[t._v("信息分发端 (Provider)")]),t._v(" "),e("p",[t._v("在客户端之间建立通信、管理感知信息以及存储共享数据是一件非常麻烦的事情。有更新程序帮您管理所有这些，您不用担心。")]),t._v(" "),e("p",[e("a",{attrs:{href:"http://github.com/yjs/y-webrtc",target:"_blank",rel:"noopener noreferrer"}},[t._v("y-webrtc"),e("OutboundLink")],1)]),t._v(" "),e("p",[t._v("使用 WebRTC 点对点传播文档更新。在信令服务器上交换信令数据。公开可用的信令服务器是可用的。通过信息分发端共享密钥，可以对信令服务器上的通信进行加密，从而保持连接信息和共享文档的私密性。")]),t._v(" "),e("p",[e("a",{attrs:{href:"http://github.com/yjs/y-websocket",target:"_blank",rel:"noopener noreferrer"}},[t._v("y-websocket"),e("OutboundLink")],1)]),t._v(" "),e("p",[t._v("包含简单的 websocket 后端和连接到该后端的 websocket 客户端的模块。后台可以在 leveldb 数据库中扩展从而进行持久化更新。")]),t._v(" "),e("p",[e("a",{attrs:{href:"http://github.com/yjs/y-indexeddb",target:"_blank",rel:"noopener noreferrer"}},[t._v("y-indexeddb"),e("OutboundLink")],1)]),t._v(" "),e("p",[t._v("高效地将文档更新并在浏览器的 IndexedDB 数据库进行持久化。该文档开箱即用，只需要通过网络更新程序同步即可。")]),t._v(" "),e("p",[e("a",{attrs:{href:"http://github.com/yjs/y-dat",target:"_blank",rel:"noopener noreferrer"}},[t._v("y-dat"),e("OutboundLink")],1)]),t._v(" "),e("p",[t._v("[开发中]使用多点写入将文档高效写入 dat 网络。每个客户端都有一个用于追加的 CDRT 本地更新日志(超核)。多点写入管理和同步超核以及 y-dat 侦听变化，并将它们应用到 Yjs 文档。")])],1)}),[],!1,null,null,null);r.default=n.exports}}]);